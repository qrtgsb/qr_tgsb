from aiogram import Bot, Dispatcher
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.utils.executor import start_webhook
from config import BOT_TOKEN

import start
import auth
import location
from db import init_db
import admin
import location_handler
import admin_panel

# üåê Webhook –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
WEBHOOK_HOST = "https://qr-tgsb.onrender.com"  # ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Render-–¥–æ–º–µ–Ω
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

WEBAPP_HOST = "0.0.0.0"
WEBAPP_PORT = 10000

# ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

# üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
init_db()

# üîß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
start.register(dp)
auth.register(dp)
location_handler.register(dp)
admin_panel.register(dp)

# üöÄ –ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
async def on_startup(dp):
    print(f"üì° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –Ω–∞ {WEBHOOK_URL}")
    await bot.set_webhook(WEBHOOK_URL)
    print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

# üõë –ü—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
async def on_shutdown(dp):
    print("‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤–µ–±—Ö—É–∫–∞...")
    await bot.delete_webhook()

# üß† –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ Webhook...")
    start_webhook(
        dispatcher=dp,
        webhook_path=WEBHOOK_PATH,
        on_startup=on_startup,
        on_shutdown=on_shutdown,
        skip_updates=True,
        host=WEBAPP_HOST,
        port=WEBAPP_PORT,
    )
