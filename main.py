from aiogram import Bot, Dispatcher, executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from config import BOT_TOKEN
import start
import auth
import location
from db import init_db
import admin
import location_handler
import admin_panel

# üîß –§–µ–π–∫–æ–≤—ã–π HTTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render (—á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞–ª –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ—Ä—Ç–∞)
import threading
from http.server import BaseHTTPRequestHandler, HTTPServer

class DummyHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.end_headers()
        self.wfile.write("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç".encode("utf-8"))

def run_dummy_server():
    server = HTTPServer(('0.0.0.0', 10000), DummyHandler)
    server.serve_forever()

threading.Thread(target=run_dummy_server, daemon=True).start()

# ‚úÖ –õ–æ–≥ —Å—Ç–∞—Ä—Ç–∞
print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ Render...")

# üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())

init_db()

# üîß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
start.register(dp)
auth.register(dp)
location_handler.register(dp)
admin_panel.register(dp)

# üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–∞–¥–µ–Ω–∏—è
if __name__ == "__main__":
    try:
        print("üöÄ –ë–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç —Å–ª—É—à–∞—Ç—å Telegram...")
        executor.start_polling(dp, skip_updates=True)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
