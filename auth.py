from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from db import search_employees_by_name, link_telegram_id, get_employee_by_id
from location import request_location
from loader import dp
from aiogram.dispatcher.filters import Text


class AuthStates(StatesGroup):
    waiting_for_name = State()

def register(dp: Dispatcher):
    @dp.callback_query_handler(lambda c: c.data == "authorize")
    async def authorize_handler(callback_query: types.CallbackQuery):
        await callback_query.message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∞—Å—Ç—å –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞:")
        await AuthStates.waiting_for_name.set()

    @dp.message_handler(state=AuthStates.waiting_for_name)
    async def search_employee(message: types.Message, state: FSMContext):
        matches = search_employees_by_name(message.text)
        if not matches:
            await message.answer("–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return


        keyboard = types.InlineKeyboardMarkup()
        for emp_id, full_name in matches:
            keyboard.add(types.InlineKeyboardButton(full_name, callback_data=f"select_{emp_id}"))
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–±—è –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=keyboard)

@dp.callback_query_handler(Text(startswith="select_"))
async def confirm_selection(callback: types.CallbackQuery):
    emp_id = callback.data.replace("select_", "")
    user_id = callback.from_user.id

    link_telegram_id(emp_id, user_id)
    employee = get_employee_by_id(emp_id)

    if not employee:
        await callback.message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞: —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
        return

    full_name = employee[3]  # –µ—Å–ª–∏ full_name ‚Äî 4-–π —Å—Ç–æ–ª–±–µ—Ü

    await callback.message.edit_reply_markup()
    await callback.message.answer(f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ {full_name}.")

    # ‚¨áÔ∏è –°—Ä–∞–∑—É –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(types.KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True))

    await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –≤—Ö–æ–¥–∞:", reply_markup=keyboard)
